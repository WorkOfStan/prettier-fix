---
name: "Prettier Fix"
description: Automatically format code using Prettier and open pull requests to fix style issues for Super-Linter compatibility.

author:
  name: "Stanislav Rejthar"
  email: "rejthar@stanislavrejthar.com"
  url: "https://github.com/WorkOfStan"

branding:
  icon: "check-circle"
  color: "blue"

inputs:
  commit-changes:
    description: "If true, commit changes to the current branch"
    type: boolean
    default: false
  commit-message:
    description: "Commit message for the changes"
    type: string
    default: "Prettier fixes applied automatically"
  node-version:
    description: "Node.js version to use"
    type: string
    default: "20"
  skip-package-setup:
    description: "If true, skip npm initialization and installation"
    type: boolean
    default: false

outputs:
  branch-name:
    description: "The branch where changes were committed"

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }} # Fetch latest changes (even by previous job)
        fetch-depth: 0 # Fetch all history for all branches and tags. Otherwise github.event.pull_request.base.ref SHA isn't found.

    # Fetch latest changes (even by previous job)
    - name: Fetch latest changes
      run: git pull origin ${{ github.ref }}
      shell: bash

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Handle package.json, Install dependencies, Run Prettier, and Clean up
      run: |
        CREATED_PACKAGE_JSON=false
        if [ "${{ inputs.skip-package-setup }}" != "true" ]; then
          if [ ! -f package.json ]; then
            echo "Setting up package.json..."
            npm init -y
            CREATED_PACKAGE_JSON=true
          fi
          echo "... and installing dependencies..."
          npm install
        fi

        if ! npx prettier -v > /dev/null 2>&1; then
          echo "Prettier not found. Installing temporarily..."
          npm install prettier
        fi

        echo "Running Prettier..."
        npx prettier --write .

        if [ "$CREATED_PACKAGE_JSON" == "true" ]; then
          echo "Cleaning up temporary files..."
          rm -f package.json package-lock.json
          rm -rf node_modules
        fi
        # Keep in the same step to hold the context for $CREATED_PACKAGE_JSON
      shell: bash

    - name: Commit and Push Changes if Any
      run: |
        if [ -z "$(git status --porcelain)" ]; then
          echo "No changes detected by Prettier. Exiting gracefully."
          exit 0
          # The rest of the script must be within the same step to really stop the execution
        fi

        # Stage only non-workflow files
        git add $(git diff --name-only | grep -vE '^.github/workflows/')

        # Check for changes in workflow files (unstaged changes) - to be fixed manually
        for file in .github/workflows/*.yml; do
          if git diff "$file" | grep -q .; then
            echo "::warning title=Manual change required::Changes detected in $file. Manual intervention required to avoid conflicts with Super-Linter."
            git diff "$file"
            # As the workflow files are not staged, their changes do not trigger status --porcelain, so there's no need to (reset neither) restore them
          fi
        done

        # Re-check after exclusions
        if [ -z "$(git status --porcelain)" ]; then
          echo "No editable changes detected by Prettier. Exiting gracefully."
          exit 0
          # The rest of the script must still be within the same step to really stop the execution
        fi

        # Determine branch name based on commit-changes input
        if ${{ inputs.commit-changes }}; then
          BRANCH_NAME=$(git branch --show-current)
          NOTICE_MESSAGE="A Prettier commit was added to the current branch: $BRANCH_NAME"
        else
          # name includes timestam and short_hash
          BRANCH_NAME="prettier/fix-$(date +'%y%m%d%H%M%S')-$(git rev-parse --short HEAD)"
          git checkout -b "$BRANCH_NAME"
          echo "::warning title=New branch created::Consider pull request for a new branch: $BRANCH_NAME (or delete it)"
          NOTICE_MESSAGE="A Prettier commit was added to the new branch: $BRANCH_NAME"
        fi

        # Configure Git user
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

        # Commit and push changes with custom message
        git commit -m "${{ inputs.commit-message }} on $(date +'%Y-%m-%d %H:%M:%S') UTC"
        echo "::notice title=Prettier commit adding::$NOTICE_MESSAGE"        
        git push origin "$BRANCH_NAME"
        COMMIT_URL=${{ github.server_url }}/${{ github.repository }}/commit/$(git rev-parse HEAD)
        echo "::notice title=View the Prettier commit::${COMMIT_URL}"

        # Set branch name as output
        echo "branch-name=$BRANCH_NAME" >> $GITHUB_OUTPUT
      shell: bash

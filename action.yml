---
name: "Prettier Fix"
description: "A GitHub action to apply Prettier fixes"

inputs:
  node-version:
    description: "Node.js version to use"
    required: true
    default: "20"

runs:
  using: "composite"
  steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Handle package.json, Install dependencies, Run Prettier, and Clean up
        run: |
          CREATED_PACKAGE_JSON=false
          if [ ! -f package.json ]; then
            npm init -y
            echo "package.json created"
            CREATED_PACKAGE_JSON=true
          fi

          # Install dependencies
          npm install

          # Run Prettier and fix
          npx prettier --write .

          # Remove package.json if it was created in this run
          if [ "$CREATED_PACKAGE_JSON" = "true" ]; then
            rm -f package.json package-lock.json
            echo "package.json and package-lock.json removed"
          fi
        shell: bash

      - name: Check if there are changes to commit
        run: |
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes detected by Prettier. Exiting gracefully."
            exit 0
            # The rest of the script must be within the same step to really stop the execution
          fi

          # Add changes
          git add .

          # Check for diffs in .github/workflows/*.yml file - to be fixed manually
          for file in .github/workflows/*.yml; do
            if git diff --staged "$file" | grep -q .; then
              echo "::warning file=$file::Changes detected in $file. Manual intervention required to avoid conflicts with Super-Linter."
              git diff --staged "$file"
            fi
          done    

          # Set branch name and create branch
          TIMESTAMP=$(date +'%y%m%d%H%M%S')
          SHORT_HASH=$(git rev-parse --short HEAD)
          BRANCH_NAME="prettier/fix-${TIMESTAMP}-${SHORT_HASH}"
          git checkout -b $BRANCH_NAME
          echo "New branch created: $BRANCH_NAME"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Commit changes without including .github/workflows
          git reset .github/workflows/*.yml
          git commit -m "Prettier fixes applied automatically on $(date +"%Y-%m-%d %H:%M:%S")"

          # Push changes to new branch
          git push origin $BRANCH_NAME
        shell: bash
